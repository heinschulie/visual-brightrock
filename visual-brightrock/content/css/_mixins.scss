@import 'colours.scss';

// Breakpoints for responsive design 

@mixin bp-large {
  @media only screen and (max-width: 60em) {
    @content;
  }
}

@mixin bp-medium {
  @media only screen and (max-width: 40em) {
    @content;
  }
}

@mixin bp-padPortrait {
  @media only screen 
    and (min-device-width : 768px) 
    and (max-device-width : 1024px) 
    and (orientation : portrait) {
    @content;
  }
}

@mixin bp-small {
  @media only screen and (max-width: 30em) {
    @content;
  }
}

// IPHONE 6 EXPERMENT 
/*@mixin bp-iphone6landscape {
    @media only screen 
        and (min-device-width : 375px) 
        and (max-device-width : 667px) 
        and (orientation : landscape) 
        and (-webkit-min-device-pixel-ratio : 2)
    { 
        @content;
    }
}

@mixin bp-iphone6portrait {
    @media only screen 
        and (min-device-width : 375px) 
        and (max-device-width : 667px) 
        and (orientation : portrait) 
        and (-webkit-min-device-pixel-ratio : 2)
    { 
        @content;
    }
}*/

//and (device-aspect-ratio: 3/2)
//and (min-device-width : 320px) 
//and (max-device-width : 480px) 
//and (orientation : landscape) { /* STYLES GO HERE */}

/* Smartphones (landscape) ----------- 4 */
@mixin bp-iphone4landscape {
    @media only screen and (min-device-width : 320px) 
                        and (max-device-width : 480px) 
                        and (orientation : landscape)
    {
        @content;
    }
}

/* Smartphones (portrait) ----------- 4 */
@mixin bp-iphone4portrait {
    @media only screen and (min-device-width : 320px) 
                        and (max-device-width : 480px) 
                        and (orientation : portrait)
                        and (device-aspect-ratio: 2/3)
    {
        @content;
    }
}

/* Smartphones (portrait) ----------- 5 */
@mixin bp-iphone5portrait {
    @media only screen and (min-device-width : 320px) 
                        and (max-device-width : 568px) 
                        and (orientation : portrait)
                        and (device-aspect-ratio: 40/71)
    {
        @content;
    }
}

/* Smartphones (landscape) ----------- 5 */
@mixin bp-iphone5landscape {
    @media only screen and (device-aspect-ratio: 71/40)
    and (min-width : 321px) {
        @content;
    }
}


/* Smartphones (portrait) ----------- 6 */
@mixin bp-iphone6portrait {
    @media only screen and (min-device-width : 375px) 
                        and (max-device-width : 667px) 
                        and (orientation : portrait)
                        and (device-aspect-ratio: 375/667)
    {
        @content;
    }
}

/* Smartphones (landscape) ----------- 6 */
@mixin bp-iphone6landscape {
    @media only screen and (device-aspect-ratio: 667/375)
    and (min-width : 375px) {
        @content;
    }
}


/* Smartphones (portrait) ----------- 6+ */
@mixin bp-iphone6Plusportrait {
    @media only screen and (min-device-width : 414px) 
                        and (max-device-width : 736px) 
                        and (orientation : portrait)
                        and (device-aspect-ratio: 9/16)
    {
        @content;
    }
}

/* Smartphones (landscape) ----------- 6+ */
@mixin bp-iphone6Pluslandscape {
    @media only screen and (device-aspect-ratio: 9/16)
    and (min-width : 414px) {
        @content;
    }
}

/* Smartphones (portrait) ----------- */
@mixin bp-iphoneportrait {
    @media only screen 
    and (max-width : 320px) {
        @content;
    }
}

/* Smartphones (portrait and landscape) ----------- */
@mixin bp-iphone {
    @media only screen /*and (min-device-width : 320px)*/ and (max-device-width : 480px) {
        @content;
    }
}

/* iPads (landscape) ----------- */
@mixin bp-ipadlandscape {
    @media only screen 
    and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) {
        @content;
    }
}

/* iPads (portrait and landscape) ----------- */
@mixin bp-ipad {
    @media only screen /*and (min-device-width : 768px)*/ and (max-device-width : 1024px) {
        @content;
    }
}

/* Desktops and laptops ----------- */
@mixin bp-desktop {
    @media only screen and (min-width : 1224px) {
        @content;
    }
}

//

@mixin alpha-attribute($attribute, $color, $background) {
  $percent: alpha($color) * 100%;
  $opaque: opacify($color, 1);
  $solid-color: mix($opaque, $background, $percent);
  #{$attribute}: $solid-color;
  #{$attribute}: $color;
}

@mixin modal(){
    position: fixed;
    z-index: 99;
    width: 100%; 
    height: 100%; 
    @include alpha-attribute('background-color', rgba(black, 0.5), white);
}

@mixin gradient($firstcolour, $secondcolour) {
                    background: -webkit-linear-gradient($firstcolour, $secondcolour);
                    /* For Safari 5.1 to 6.0 */
                    background: -o-linear-gradient($firstcolour, $secondcolour); /* For Opera 11.1 to 12.0 */
                    background: -moz-linear-gradient($firstcolour, $secondcolour); /* For Firefox 3.6 to 15 */
                    background: linear-gradient($firstcolour, $secondcolour); /* Standard syntax */
                   }

@mixin radial-gradient($from, $to) {
    background: -moz-radial-gradient(center, circle cover, $from 0%, $to 80%);
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, $from), color-stop(80%, $to));
    background: -webkit-radial-gradient(center, circle cover, $from 0%, $to 80%);
    background: -o-radial-gradient(center, circle cover, $from 0%, $to 80%);
    background: -ms-radial-gradient(center, circle cover, $from 0%, $to 80%);
    background: radial-gradient(center, circle cover, $from 0%, $to 80%);
    //background-color: $from;
}

@mixin linearGradient($top, $bottom){
    background: $top; /* Old browsers */
    background: -moz-linear-gradient(top,  $top 0%, $bottom 100%); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(top,  $top 0%,$bottom 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(top,  $top 0%,$bottom 100%); /* IE10+ */
    background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}

@mixin rotate( $degrees ) {
  -webkit-transform: rotate(#{$degrees}deg);
  -moz-transform: rotate(#{$degrees}deg);
  -ms-transform: rotate(#{$degrees}deg);
  -o-transform: rotate(#{$degrees}deg);
  transform: rotate(#{$degrees}deg);

  filter:  progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)});
  -ms-filter: "progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)})";
  zoom: 1;
 }

//Border radius long and short 

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin radius($topleft, $topright: $topleft, $bottomright: $topleft, $bottomleft: $topleft) {

    -moz-border-radius:             $topleft $topright $bottomright $bottomleft;
    -webkit-border-radius:          $topleft $topright $bottomright $bottomleft;
    border-radius:                  $topleft $topright $bottomright $bottomleft;

}

// Transforms

// generic transform
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	    -webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
 
// scale
@mixin scale($scale) {
	 @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
	     -o-transform-origin: $origin;
	    -ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
          transform-origin: $origin;
}

@mixin centerThisThing(){
    position: absolute;
    top: 50%;
    left: 50%;
    @include translate(-50%, -50%);
}

@mixin drop-shadow($bool) {
    @if ($bool) {
        -moz-box-shadow:    0 15px 17px 0px rgba(0, 0, 0, 0.5);
        -webkit-box-shadow: 0 15px 17px 0px rgba(0, 0, 0, 0.5);
        box-shadow:         0 15px 17px 0px rgba(0, 0, 0, 0.5);
    }
   @else {
        -moz-box-shadow: none; 
        -webkit-box-shadow: none;
       box-shadow: none;
   }
}

@mixin filter($filter-type,$filter-amount) { 
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  -moz-filter: $filter-type+unquote('(#{$filter-amount})');
  -ms-filter: $filter-type+unquote('(#{$filter-amount})');
  -o-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
}

@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

@mixin keyframes-rotation($startDegree, $endDegree){
    
    @-moz-keyframes rotate {
		0% {transform: rotate($startDegree+deg);}
		100% {transform: rotate($endDegree+deg);}
	}

	@-webkit-keyframes rotate {
		0% {transform: rotate($startDegree+deg);}
		100% {transform: rotate($endDegree+deg);}
	}

	@-o-keyframes rotate {
		0% {transform: rotate($startDegree+deg);}
		100% {transform: rotate($endDegree+deg);}
	}

	@keyframes rotate {
		0% {transform: rotate($startDegree+deg);}
		100% {transform: rotate($endDegree+deg);}
	}
}

@mixin keyframes-opacity($startAmount, $endAmount){
    
    @-webkit-keyframes animated-opacity {
      0%   { opacity: $startAmount; }
      100% { opacity: $endAmount; }
    }
    @-moz-keyframes animated-opacity {
      0%   { opacity: $startAmount; }
      100% { opacity: $endAmount; }
    }
    @-o-keyframes animated-opacity {
      0%   { opacity: $startAmount; }
      100% { opacity: $endAmount; }
    }
    @keyframes animated-opacity {
      0%   { opacity: $startAmount; }
      100% { opacity: $endAmount; }
    }
}

@mixin rotate-Categories($count, $index){
    $degree: 90 + ((360 * $index) / $count); 
    @include keyframes-rotation($degree, 40); 
}

@mixin CircleOfCircles($number-of-circles, $element, $percentage) {
    @for $n from 1 through $number-of-circles {
        #{$element}:nth-child(#{$n}) {
        $angle-in-radians: $n * (pi() * 2 / $number-of-circles);
            margin-top: $percentage * sin($angle-in-radians);
            margin-left: $percentage * cos($angle-in-radians);
        }
    }
}

// FONT AWESOME Mixins
// --------------------------

@mixin fa-icon() {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome; // shortening font declaration
  font-size: inherit; // can't have font-size inherit on line above, so need to override
  text-rendering: auto; // optimizelegibility throws things off #1094
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin fa-icon-rotate($degrees, $rotation) {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});
  -webkit-transform: rotate($degrees);
      -ms-transform: rotate($degrees);
          transform: rotate($degrees);
}

@mixin fa-icon-flip($horiz, $vert, $rotation) {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});
  -webkit-transform: scale($horiz, $vert);
      -ms-transform: scale($horiz, $vert);
          transform: scale($horiz, $vert);
}

// 
// --------------------------